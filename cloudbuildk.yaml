# cloudbuild.yaml
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/notebooklmini-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/notebooklmini-backend:latest'
      - '.'

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/notebooklmini-backend:$COMMIT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/notebooklmini-backend:latest'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'notebooklmini-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/notebooklmini-backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '3600'
      - '--concurrency'
      - '100'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'POSTGRES_HOST=/cloudsql/${_CLOUD_SQL_CONNECTION_NAME}'
      - '--set-env-vars'
      - 'POSTGRES_USER=${_POSTGRES_USER}'
      - '--set-env-vars'
      - 'POSTGRES_PASSWORD=${_POSTGRES_PASSWORD}'
      - '--set-env-vars'
      - 'POSTGRES_DB=${_POSTGRES_DB}'
      - '--set-env-vars'
      - 'JWT_SECRET_KEY=${_JWT_SECRET_KEY}'
      - '--set-env-vars'
      - 'JWT_REFRESH_KEY=${_JWT_REFRESH_KEY}'
      - '--set-env-vars'
      - 'GOOGLE_API_KEY=${_GOOGLE_API_KEY}'
      - '--set-env-vars'
      - 'S3_HOST=storage.googleapis.com'
      - '--set-env-vars'
      - 'S3_ACCESS_KEY=${_GCS_ACCESS_KEY}'
      - '--set-env-vars'
      - 'S3_SECRET_KEY=${_GCS_SECRET_KEY}'
      - '--set-env-vars'
      - 'S3_SECURE=true'
      - '--set-env-vars'
      - 'S3_TYPE=gcs'
      - '--set-env-vars'
      - 'S3_DOCUMENT_BUCKET=${_GCS_BUCKET_NAME}'
      - '--set-env-vars'
      - 'QDRANT_HOST=${_QDRANT_HOST}'
      - '--set-env-vars'
      - 'QDRANT_PORT=${_QDRANT_PORT}'
      - '--set-env-vars'
      - 'QDRANT_COLLECTION_NAME=${_QDRANT_COLLECTION_NAME}'
      - '--add-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION_NAME}'

# Substitution variables that you'll set in Cloud Build triggers
substitutions:
  _CLOUD_SQL_CONNECTION_NAME: 'proyectocloud-455517:us-central1:pg-db'
  _POSTGRES_USER: 'cloud'
  _POSTGRES_PASSWORD: 'cloud123'
  _POSTGRES_DB: 'postgres'
  _JWT_SECRET_KEY: 'oXEvSSFm4-KJ_0TstrJ83IYVVPD36kgvSh-MJOQn4SvO3ZOxQU7ay6hf-r-ylrkqt8uhnYQP5OMrSa7v2GTMow'
  _JWT_REFRESH_KEY: 'k9B8HmVBS49Ghasr70v7AUA6OLOaSoEwdu00sWkFsOcj4s6y8kxHBcqXB1jmnOwfQbcn_4S6WO2zfAmUEWgOJQ'
  _GOOGLE_API_KEY: 'AIzaSyA42jL2yYqlY8_DANM-fdZ5p75EChQ-F04'
  _GCS_BUCKET_NAME: 'documents-1f8ab091a27a451caf02da6239f9f50a'
  _GCS_ACCESS_KEY: 'GOOGPKETNBL3JG6CK7H6LZNA'
  _GCS_SECRET_KEY: 'gxOgTXDvhvm8XS0ZVoaBHGDpurakzC90a+VnDVu5'
  _QDRANT_HOST: 'your-qdrant-compute-engine-ip'
  _QDRANT_PORT: '6333'
  _QDRANT_COLLECTION_NAME: 'chunks'

timeout: '1200s'

options:
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'